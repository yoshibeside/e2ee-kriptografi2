import encryptResponse from "../lib/encryptresponse.js";

export const generateParam = async (req, res, next) => {
 
    try {
      const p = BigInt('0xE0A67598CD1B763BC98C8ABB333E5DDA0CD3AA0E5E1FB5BA8A7B4EABC10BA338FAE06DD4B90FDA70D7CF0CB0C638BE3341BEC0AF8A7330A3307DED2299A0EE606DF035177A239C34A912C202AA5F83B9C4A7CF0235B5316BFC6EFB9A248411258B30B839AF172440F32563056CB67A861158DDD90E6A894C72A5BBEF9E286C6B');
      const q = BigInt('0xE950511EAB424B9A19A2AEB4E159B7844C589C4F');
      const g = BigInt('0xD29D5121B0423C2769AB21843E5A3240FF19CACC792264E3BB6BE4F78EDD1B15C4DFF7F1D905431F0AB16790E1F773B5CE01C804E509066A9919F5195F4ABC58189FD9FF987389CB5BEDF21B4DAB4F8B76A055FFE2770988FE2EC2DE11AD92219F0B351869AC24DA3D7BA87011A701CE8EE7BFE49486ED4527B7186CA4610A75');
      const encrypt = encryptResponse(req.body.shared, {p: p.toString(), q: q.toString(), alpha: g.toString()})
      res.status(200).json({encrypted: encrypt, key: req.body.shared});
    } catch (error) {
      next(error)
    }
};